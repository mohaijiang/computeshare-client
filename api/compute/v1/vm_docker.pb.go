// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.2
// source: api/compute/v1/vm_docker.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateVmDockerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image      string   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Port       string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Command    []string `protobuf:"bytes,3,rep,name=command,proto3" json:"command,omitempty"`
	BusinessId string   `protobuf:"bytes,4,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *CreateVmDockerRequest) Reset() {
	*x = CreateVmDockerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_vm_docker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVmDockerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVmDockerRequest) ProtoMessage() {}

func (x *CreateVmDockerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_vm_docker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVmDockerRequest.ProtoReflect.Descriptor instead.
func (*CreateVmDockerRequest) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_vm_docker_proto_rawDescGZIP(), []int{0}
}

func (x *CreateVmDockerRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CreateVmDockerRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *CreateVmDockerRequest) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *CreateVmDockerRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type PortBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip          string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	PrivatePort uint32 `protobuf:"varint,2,opt,name=private_port,json=privatePort,proto3" json:"private_port,omitempty"`
	PublicPort  uint32 `protobuf:"varint,3,opt,name=public_port,json=publicPort,proto3" json:"public_port,omitempty"`
	Type        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *PortBinding) Reset() {
	*x = PortBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_vm_docker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortBinding) ProtoMessage() {}

func (x *PortBinding) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_vm_docker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortBinding.ProtoReflect.Descriptor instead.
func (*PortBinding) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_vm_docker_proto_rawDescGZIP(), []int{1}
}

func (x *PortBinding) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *PortBinding) GetPrivatePort() uint32 {
	if x != nil {
		return x.PrivatePort
	}
	return 0
}

func (x *PortBinding) GetPublicPort() uint32 {
	if x != nil {
		return x.PublicPort
	}
	return 0
}

func (x *PortBinding) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type DeleteVmDockerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteVmDockerRequest) Reset() {
	*x = DeleteVmDockerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_vm_docker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVmDockerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVmDockerRequest) ProtoMessage() {}

func (x *DeleteVmDockerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_vm_docker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVmDockerRequest.ProtoReflect.Descriptor instead.
func (*DeleteVmDockerRequest) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_vm_docker_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteVmDockerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteVmDockerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteVmDockerReply) Reset() {
	*x = DeleteVmDockerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_vm_docker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVmDockerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVmDockerReply) ProtoMessage() {}

func (x *DeleteVmDockerReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_vm_docker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVmDockerReply.ProtoReflect.Descriptor instead.
func (*DeleteVmDockerReply) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_vm_docker_proto_rawDescGZIP(), []int{3}
}

type GetVmDockerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetVmDockerRequest) Reset() {
	*x = GetVmDockerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_vm_docker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVmDockerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVmDockerRequest) ProtoMessage() {}

func (x *GetVmDockerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_vm_docker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVmDockerRequest.ProtoReflect.Descriptor instead.
func (*GetVmDockerRequest) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_vm_docker_proto_rawDescGZIP(), []int{4}
}

func (x *GetVmDockerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetVmDockerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Image       string         `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Ports       []*PortBinding `protobuf:"bytes,3,rep,name=ports,proto3" json:"ports,omitempty"`
	CpuUsage    uint64         `protobuf:"varint,4,opt,name=cpuUsage,proto3" json:"cpuUsage,omitempty"`
	MemoryUsage uint64         `protobuf:"varint,5,opt,name=memoryUsage,proto3" json:"memoryUsage,omitempty"`
}

func (x *GetVmDockerReply) Reset() {
	*x = GetVmDockerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_vm_docker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVmDockerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVmDockerReply) ProtoMessage() {}

func (x *GetVmDockerReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_vm_docker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVmDockerReply.ProtoReflect.Descriptor instead.
func (*GetVmDockerReply) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_vm_docker_proto_rawDescGZIP(), []int{5}
}

func (x *GetVmDockerReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetVmDockerReply) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetVmDockerReply) GetPorts() []*PortBinding {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *GetVmDockerReply) GetCpuUsage() uint64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *GetVmDockerReply) GetMemoryUsage() uint64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

type ListVmDockerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListVmDockerRequest) Reset() {
	*x = ListVmDockerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_vm_docker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVmDockerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVmDockerRequest) ProtoMessage() {}

func (x *ListVmDockerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_vm_docker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVmDockerRequest.ProtoReflect.Descriptor instead.
func (*ListVmDockerRequest) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_vm_docker_proto_rawDescGZIP(), []int{6}
}

type ListVmDockerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*GetVmDockerReply `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListVmDockerReply) Reset() {
	*x = ListVmDockerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_compute_v1_vm_docker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVmDockerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVmDockerReply) ProtoMessage() {}

func (x *ListVmDockerReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_compute_v1_vm_docker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVmDockerReply.ProtoReflect.Descriptor instead.
func (*ListVmDockerReply) Descriptor() ([]byte, []int) {
	return file_api_compute_v1_vm_docker_proto_rawDescGZIP(), []int{7}
}

func (x *ListVmDockerReply) GetResult() []*GetVmDockerReply {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_api_compute_v1_vm_docker_proto protoreflect.FileDescriptor

var file_api_compute_v1_vm_docker_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x76, 0x6d, 0x5f, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7c,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6d, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x0b,
	0x50, 0x6f, 0x72, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6d, 0x44,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6d, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x6d, 0x44, 0x6f, 0x63, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x56, 0x6d, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6d, 0x44,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x6d, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x38, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6d, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xab, 0x05, 0x0a, 0x08,
	0x56, 0x6d, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x6d, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x6d, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6d, 0x44, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x6d, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x6d,
	0x2f, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x72, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x6d, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6d, 0x44, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x56, 0x6d, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x2a, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x6d, 0x2f,
	0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x69, 0x0a, 0x05, 0x47,
	0x65, 0x74, 0x56, 0x6d, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6d, 0x44, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6d, 0x44,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x6d, 0x2f, 0x64, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x67, 0x0a, 0x06, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6d,
	0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6d, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6d, 0x44, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f,
	0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x6d, 0x2f, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x12,
	0x74, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x56, 0x6d, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x6d, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x6d, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x1a, 0x18, 0x2f, 0x76, 0x31,
	0x2f, 0x76, 0x6d, 0x2f, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x72, 0x0a, 0x06, 0x53, 0x74, 0x6f, 0x70, 0x56, 0x6d, 0x12,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x6d, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6d, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a,
	0x1a, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x6d, 0x2f, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x6f, 0x70, 0x42, 0x4f, 0x0a, 0x0e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x3b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x68, 0x61, 0x69, 0x6a,
	0x69, 0x61, 0x6e, 0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_compute_v1_vm_docker_proto_rawDescOnce sync.Once
	file_api_compute_v1_vm_docker_proto_rawDescData = file_api_compute_v1_vm_docker_proto_rawDesc
)

func file_api_compute_v1_vm_docker_proto_rawDescGZIP() []byte {
	file_api_compute_v1_vm_docker_proto_rawDescOnce.Do(func() {
		file_api_compute_v1_vm_docker_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_compute_v1_vm_docker_proto_rawDescData)
	})
	return file_api_compute_v1_vm_docker_proto_rawDescData
}

var file_api_compute_v1_vm_docker_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_compute_v1_vm_docker_proto_goTypes = []interface{}{
	(*CreateVmDockerRequest)(nil), // 0: api.compute.v1.CreateVmDockerRequest
	(*PortBinding)(nil),           // 1: api.compute.v1.PortBinding
	(*DeleteVmDockerRequest)(nil), // 2: api.compute.v1.DeleteVmDockerRequest
	(*DeleteVmDockerReply)(nil),   // 3: api.compute.v1.DeleteVmDockerReply
	(*GetVmDockerRequest)(nil),    // 4: api.compute.v1.GetVmDockerRequest
	(*GetVmDockerReply)(nil),      // 5: api.compute.v1.GetVmDockerReply
	(*ListVmDockerRequest)(nil),   // 6: api.compute.v1.ListVmDockerRequest
	(*ListVmDockerReply)(nil),     // 7: api.compute.v1.ListVmDockerReply
}
var file_api_compute_v1_vm_docker_proto_depIdxs = []int32{
	1, // 0: api.compute.v1.GetVmDockerReply.ports:type_name -> api.compute.v1.PortBinding
	5, // 1: api.compute.v1.ListVmDockerReply.result:type_name -> api.compute.v1.GetVmDockerReply
	0, // 2: api.compute.v1.VmDocker.CreateVm:input_type -> api.compute.v1.CreateVmDockerRequest
	2, // 3: api.compute.v1.VmDocker.DeleteVm:input_type -> api.compute.v1.DeleteVmDockerRequest
	4, // 4: api.compute.v1.VmDocker.GetVm:input_type -> api.compute.v1.GetVmDockerRequest
	6, // 5: api.compute.v1.VmDocker.ListVm:input_type -> api.compute.v1.ListVmDockerRequest
	4, // 6: api.compute.v1.VmDocker.StartVm:input_type -> api.compute.v1.GetVmDockerRequest
	4, // 7: api.compute.v1.VmDocker.StopVm:input_type -> api.compute.v1.GetVmDockerRequest
	5, // 8: api.compute.v1.VmDocker.CreateVm:output_type -> api.compute.v1.GetVmDockerReply
	3, // 9: api.compute.v1.VmDocker.DeleteVm:output_type -> api.compute.v1.DeleteVmDockerReply
	5, // 10: api.compute.v1.VmDocker.GetVm:output_type -> api.compute.v1.GetVmDockerReply
	7, // 11: api.compute.v1.VmDocker.ListVm:output_type -> api.compute.v1.ListVmDockerReply
	5, // 12: api.compute.v1.VmDocker.StartVm:output_type -> api.compute.v1.GetVmDockerReply
	5, // 13: api.compute.v1.VmDocker.StopVm:output_type -> api.compute.v1.GetVmDockerReply
	8, // [8:14] is the sub-list for method output_type
	2, // [2:8] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_compute_v1_vm_docker_proto_init() }
func file_api_compute_v1_vm_docker_proto_init() {
	if File_api_compute_v1_vm_docker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_compute_v1_vm_docker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVmDockerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_vm_docker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_vm_docker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVmDockerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_vm_docker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVmDockerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_vm_docker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVmDockerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_vm_docker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVmDockerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_vm_docker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVmDockerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_compute_v1_vm_docker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVmDockerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_compute_v1_vm_docker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_compute_v1_vm_docker_proto_goTypes,
		DependencyIndexes: file_api_compute_v1_vm_docker_proto_depIdxs,
		MessageInfos:      file_api_compute_v1_vm_docker_proto_msgTypes,
	}.Build()
	File_api_compute_v1_vm_docker_proto = out.File
	file_api_compute_v1_vm_docker_proto_rawDesc = nil
	file_api_compute_v1_vm_docker_proto_goTypes = nil
	file_api_compute_v1_vm_docker_proto_depIdxs = nil
}
